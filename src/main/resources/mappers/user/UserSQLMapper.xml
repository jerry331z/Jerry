<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.user.UserSQLMapper">
    <!-- 회원가입 -->
    <insert id="insertUser">
        insert into jerry_user(user_no, question_no, user_id, user_pw, user_nickname, user_gender,
                               user_birth, user_phone, user_email)
        values (jerry_user_seq.nextval,
                #{user_id},
                #{question_no},
                #{user_pw},
                #{user_nickname},
                #{user_gender},
                #{user_birth},
                #{user_phone},
                #{user_email},
                #{user_findAnswer})
    </insert>

    <!-- 회원가입 아이디 중복체크 -->
    <select id="isExistId" resultType="int">
        select count(*)
        from jerry_user
        where user_id = #{user_id}
    </select>

    <!-- 회원가입 닉네임 중복체크 -->
    <select id="isExistNickName" resultType="int">
        select count(*)
        from jerry_user
        where user_nickname = #{user_nickname}
    </select>

    <!-- 회원가입 휴대폰번호 중복 체크 -->
    <select id="isExistPhoneNumber" resultType="int">
        select count(*)
        from jerry_user
        where user_phone = #{user_phone}
    </select>

    <!-- 회원가입 이메일 중복 체크 -->
    <select id="isExistEmail" resultType="int">
        select count(*)
        from jerry_user
        where user_email = #{user_email}
    </select>

    <!-- 유저 로그인 -->
    <select id="selectByIdAndPw" resultType="UserVo">
        select *
        from jerry_user
        where user_id = #{user_id}
          and user_pw = #{user_pw}
    </select>

    <!-- 최종 로그인 시간 -->
    <update id="updateLastConnectionDate">
        update jerry_user
        set user_last_connection_date = SYSDATE
        where user_id = #{user_id}
    </update>

    <!-- 아이디 찾기 -->
    <select id="getUserIdByNickNameAndEmail" resultType="map">
        select *
        from jerry_user
        where user_nickname = #{user_nickname}
          and user_email = #{user_email}
    </select>

    <!-- 비밀번호 찾기 질문 -->
    <select id="getJoinQuestionList" resultType="QuestionVo">
        select *
        from jerry_find_question
    </select>

    <!-- 비밀번호 찾기 질문 조회 -->
    <select id="getUserQuestionById" resultType="map">
        SELECT nf.question_content
        FROM jerry_user nu,
             jerry_find_question nf
        WHERE nu.question_no = nf.question_no
          AND nu.user_id = #{user_id}
    </select>

    <!-- 비밀번호 찾기 질문 답변 -->
    <select id="getUserPwByfindAnswer" resultType="UserVo">
        SELECT *
        FROM jerry_user
        WHERE user_findAnswer = #{user_findAnswer}
          AND user_id = #{user_id}
    </select>

    <!-- 임시 비밀번호 발급 -->
    <update id="getUserUpdatePw">
        UPDATE jerry_user
        SET user_pw = #{user_pw}
        WHERE user_id = #{user_id}
    </update>

    <!-- 자동 로그인 -->
    <update id="keepLogin">
        update jerry_user
        set sessionkey   = #{sessionId}
          , sessionlimit = #{next}
        where user_id = #{user_id}
    </update>

    <!--Session Key 확인-->
    <select id="checkUserWithSessionKey" resultType="UserVo">
        select *
        from jerry_user
        where sessionkey = #{value}
          and sessionlimit > sysdate
    </select>

    <!-- 유저정보 업데이트 -->
    <update id="updateUserInfoDate">
        update jerry_user
        SET question_no     = #{question_no},
            user_nickname   = #{user_nickname},
            user_phone      = #{user_phone},
            user_email      = #{user_email},
            user_findAnswer = #{user_findAnswer}
        where user_id = #{user_id}
    </update>

    <select id="getUser" resultType="UserVo">
        select * from jerry_user where user_id = #{user_id}
    </select>
</mapper>